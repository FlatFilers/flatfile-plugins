name: Test
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  determine-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - name: Get package names
        id: set-packages
        run: |
          SEARCH_DIRS="plugins utils validate convert enrich import export"

          PACKAGES=$(
            for dir in $SEARCH_DIRS; do
              if [ -d "$dir" ]; then
                find "$dir" -maxdepth 2 -name "package.json" -exec sh -c '
                  PACKAGE_NAME=$(jq -r .name {})
                  if [ "$PACKAGE_NAME" != "null" ]; then
                    echo "$PACKAGE_NAME"
                  fi
                ' \;
              fi
            done | jq -R -s -c 'split("\n")[:-1]'
          )

          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT
          echo "Found packages: $PACKAGES"

  # Build job that runs once and produces build output and dependencies
  build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-key }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Cache Node.js dependencies
      - name: Cache Node.js dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Cache build output (build outputs located in ./**/**/dist for each package)
      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: |
            ./**/**/dist
          key: ${{ runner.os }}-build-${{ hashFiles('**/package.json', '**/tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build all packages
        run: npx turbo run build

      # Upload all build outputs (from ./**/**/dist for each package) as an artifact to be shared with test jobs
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: |
            ./**/**/dist

      # Upload node_modules as an artifact
      - name: Upload node_modules
        uses: actions/upload-artifact@v3
        with:
          name: node-modules
          path: node_modules

  test-packages:
    needs: [determine-packages, build]
    name: Test (${{ matrix.package }})
    runs-on: ubuntu-latest
    if: ${{ github.head_ref != 'changeset-release/main' }}
    strategy:
      matrix:
        package: ${{ fromJson(needs.determine-packages.outputs.packages) }}
      fail-fast: false
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Download node_modules from the build job artifact
      - name: Download Node.js dependencies
        uses: actions/download-artifact@v3
        with:
          name: node-modules
          path: node_modules

      # Download the relevant package's build output
      - name: Download build output
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: ./

      # Run tests for the specific package in the matrix
      - name: Test
        run: npx turbo run test --filter=${{ matrix.package }}

  test:
    needs: test-packages
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check test results
        run: |
          echo "All package tests completed successfully"
          exit 0
